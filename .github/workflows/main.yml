name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build project
        run: dotnet build --configuration Release --no-restore

      - name: Run tests
        run: dotnet test --configuration Release --no-restore

  docker:
    needs: build-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker images
        run: |
          docker build -t cleytonsantos/payconnect-payment-webapi:latest -f src/PayConnect.Payment.WebApi/Dockerfile .
          docker build -t cleytonsantos/payconnect-transaction-webapi:latest -f src/PayConnect.Transaction.WebApi/Dockerfile .

      - name: Push Docker images
        run: |
          docker push cleytonsantos/payconnect-payment-webapi:latest
          docker push cleytonsantos/payconnect-transaction-webapi:latest

  deploy:
    needs: docker
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install Elastic Beanstalk CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip3 install awsebcli --upgrade

      - name: Deploy to Elastic Beanstalk
        run: |
          # Inicializar o ambiente
          eb init -p docker PayConnect-env --region ${{ secrets.AWS_REGION }}
          eb use PayConnect-env

          # Criar o arquivo ZIP usando .ebignore
          zip -r app.zip . -x@.ebignore

          # Upload para o bucket S3
          aws s3 cp app.zip s3://elasticbeanstalk-${{ secrets.AWS_REGION }}-${{ secrets.AWS_ACCOUNT_ID }}/PayConnect-env/

          # Registrar uma nova vers√£o do aplicativo
          aws elasticbeanstalk create-application-version \
            --application-name PayConnect-env \
            --version-label app-v1 \
            --source-bundle S3Bucket="elasticbeanstalk-${{ secrets.AWS_REGION }}-${{ secrets.AWS_ACCOUNT_ID }}",S3Key="PayConnect-env/app.zip"

          # Atualizar o ambiente do Elastic Beanstalk
          aws elasticbeanstalk update-environment \
            --environment-name PayConnect-env \
            --version-label app-v1
